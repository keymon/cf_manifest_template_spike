---
name: bosh

iaas_specific: (( merge ))
terraform_outputs: (( merge ))
secrets: (( merge ))

releases:
  - (( iaas_specific.bosh.cpi_release ))
  - name: bosh
    url: https://bosh.io/d/github.com/cloudfoundry/bosh?v=190
    sha1: a0260b8cbcd3fba3a2885ddaa7040b8c4cb22a49

networks: (( merge ))

resource_pools:
  - name: bosh_vms
    network: private
    stemcell: (( iaas_specific.bosh.stemcell ))
    cloud_properties: (( iaas_specific.bosh.vm.cloud_properties ))

disk_pools:
  - name: disks
    disk_size: 32_768
    cloud_properties: (( iaas_specific.disks.cloud_properties ))

jobs:
  - name: bosh
    instances: 1

    templates:
      - name: nats
        release: bosh
      - name: redis
        release: bosh
      - name: postgres
        release: bosh
      - name: powerdns
        release: bosh
      - name: blobstore
        release: bosh
      - name: director
        release: bosh
      - name: health_monitor
        release: bosh
      - name: cpi
        release: bosh-google-cpi
      - name: registry
        release: bosh-google-cpi

    resource_pool: bosh_vms
    persistent_disk_pool: disks

    networks:
      - name: private
        default:
          - dns
          - gateway
        static_ips: (( terraform_outputs.bosh.private_static_ips ))
      - name: public
        static_ips: (( terraform_outputs.bosh.public_static_ips ))

    properties:
      nats:
        address: 127.0.0.1
        user: nats
        password: (( secrets.passwords.bosh.nats ))

      redis:
        listen_address: 127.0.0.1
        address: 127.0.0.1
        password: (( secrets.passwords.bosh.redis ))

      postgres: &db
        adapter: postgres
        host: 127.0.0.1
        user: postgres
        password: (( secrets.passwords.bosh.postgres ))
        database: bosh

      dns:
        address: (( terraform_outputs.bosh.microbosh_endpoint_ip ))
        domain_name: microbosh
        db: *db
        recursor: 8.8.8.8

      blobstore:
        address: (( terraform_outputs.bosh.microbosh_endpoint_ip ))
        provider: dav
        director:
          user: director
          password: (( secrets.passwords.bosh.director ))
        agent:
          user: agent
          password: (( secrets.passwords.bosh.agent ))

      director:
        address: 127.0.0.1
        name: microbosh
        db: *db
        cpi_job: cpi
        max_threads: 10

      hm:
        http:
          user: hm
          password: (( secrets.passwords.bosh.hm ))
        director_account:
          user: admin
          password: (( secrets.passwords.bosh.director )) # not sure if it must be the same account than director
        resurrector_enabled: true

      ntp: &ntp (( iaas_specific.ntp_servers ))

      google: &google_properties
        project: ${gce_project_id}
        json_key: |
                    ACCOUNT_JSON
        default_zone: ${gce_default_zone}

      agent:
        mbus: (( "nats://nats:" secrets.passwords.bosh.nats "@" terraform_outputs.bosh.microbosh_endpoint_ip ":4222" ))
        ntp: *ntp
        blobstore:
           options:
             endpoint: (( "http://" terraform_outputs.bosh.microbosh_endpoint_ip ":25250" ))
             user: agent
             password: agent

      registry:
        host: (( terraform_outputs.bosh.microbosh_endpoint_ip ))
        username: registry
        password: registry

cloud_provider:
  template:
    name: cpi
    release: bosh-google-cpi

  ssh_tunnel:
    host: ${gce_static_ip}
    port: 22
    user: ${gce_ssh_user}
    private_key: ${gce_ssh_key_path}

  mbus: https://mbus:mbus@${gce_static_ip}:6868

  properties:
    google: *google_properties
    agent:
      mbus: https://mbus:mbus@0.0.0.0:6868
      ntp: *ntp
      blobstore:
        provider: local
        options:
          blobstore_path: /var/vcap/micro_bosh/data/cache

